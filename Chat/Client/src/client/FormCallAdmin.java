/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;

/**
 *
 * @author Mario
 */
public class FormCallAdmin extends javax.swing.JFrame implements Runnable{

    DataOutputStream out;
    BufferedReader inp;
    String username;
    Socket s;
    Thread t;
    public boolean calling = false;
    TargetDataLine audio_in;
    public int port = 8888;
    
    public SourceDataLine audio_out;
    public AudioFormat getAudioFormat(){
        float sampleRate = 8000.0F;
        int sampleSizeInBits = 16;
        int channel = 2;
        boolean signed = true;
        boolean bigEndian = true;
        return new AudioFormat(sampleRate, sampleSizeInBits, channel, signed, bigEndian);
    }
    /**
     * Creates new form FormCallAdmin
     */
    public FormCallAdmin() {
        initComponents();
    }
    
    public FormCallAdmin(String uname)
    {
            initComponents();
            btnEnd.setVisible(false);
        try {
            username = uname;
            s = new Socket("localhost", 23144);
            jLabel1.setText("Accept call from " + username + " ?");
            out = new DataOutputStream(s.getOutputStream());
            inp = new BufferedReader(new InputStreamReader(s.getInputStream()));
            if (t == null) {
                t = new Thread(this, "Call-Admin-Side");
                t.start();
            }
        } catch (IOException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAcc = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnEnd = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAcc.setText("Accept");
        btnAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccActionPerformed(evt);
            }
        });

        btnCancel.setText("Decline");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Accept call from..");

        btnEnd.setText("End");
        btnEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAcc)
                        .addGap(59, 59, 59)
                        .addComponent(btnEnd))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel1)
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAcc)
                    .addComponent(btnCancel)
                    .addComponent(btnEnd))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccActionPerformed
        try {
            // TODO add your handling code here:
            out.writeBytes("[ACC]\n");
            jLabel1.setText("Connected");
            btnEnd.setVisible(true);
            btnAcc.setVisible(false);
            btnCancel.setVisible(false);
            init_audio();
            
        } catch (IOException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAccActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            // TODO add your handling code here:
            out.writeBytes("[DEC]\n");
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndActionPerformed
        try {
            // TODO add your handling code here:
            out.writeBytes("[END-CALL]\n");
            calling = false;
        } catch (IOException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEndActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCallAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCallAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCallAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCallAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCallAdmin().setVisible(true);
            }
        });
    }
    
    public void init_audio(){
        try {
            AudioFormat format = getAudioFormat();
            DataLine.Info info_out = new DataLine.Info(SourceDataLine.class, format);
            DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);
            if (!AudioSystem.isLineSupported(info_out) && !AudioSystem.isLineSupported(info)) {
                System.out.println("not support");
                System.exit(0);
            }
            calling=true;
            audio_out = (SourceDataLine) AudioSystem.getLine(info_out);
            audio_out.open(format);
            audio_out.start();
            player_thread p = new player_thread(this);
            p.din = new DatagramSocket(port);
            p.audio_out = audio_out;
            p.start();
            audio_in = (TargetDataLine) AudioSystem.getLine(info);
            audio_in.open();
            audio_in.start();
            recorder_thread_admin r = new recorder_thread_admin(this);
            InetAddress inet = InetAddress.getByName("localhost");
            r.audio_in = audio_in;
            r.dout = new DatagramSocket();
            r.server_ip = inet;
            r.server_port = port;
            r.start();
        } catch (LineUnavailableException | SocketException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcc;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEnd;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(true)
        {
            try {
                System.out.println("200 menunggu msg");
                String msg = inp.readLine();
                System.out.println("201 " +msg);
                if (msg.contains("[END-CALL]")) {
                    btnEnd.setVisible(false);
                    jLabel1.setText("Disconnect");
                }
            } catch (IOException ex) {
                Logger.getLogger(FormCallAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
